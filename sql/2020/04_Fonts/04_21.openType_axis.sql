#standardSQL
#OpenType axis(??NoResult)
CREATE TEMP FUNCTION getName(font_details STRING) RETURNS STRING LANGUAGE js AS '''
try {
  const metadata = RegExp('(not to be used for anything other than web font use!|web use only|web_use_only|:|;|^google$|copyright|©|(c)|rights reserved|published by|generated by|property of|trademark|version|v\\d+|release|untitled|^bold$|^light$|^semibold$|^defaults$|^normal$|^regular$|^[a-f0-9]+$|Vernon Adams|Jan Kovarik|Jan Kovarik|Mark Simonson|Paul D. Hunt|Kai Bernau|Kris Sowersby|Joshua Darden|Jos Buivenga|Yugo Kajiwara|Moslem Ebrahimi|Hadrien Boyer|Russell Benson|Ryan Martinson|Joen Asmussen|Olivier Gourvat|Hannes von Doehren|René Bieder|House Industries|GoDaddy|TypeSquare|Dalton Maag Ltd|_null_name_substitute_|^font$|Moveable Type)', 'i')
  return Object.values(JSON.parse(font_details).names).find(name => {
    name = name.trim();
    return name.length > 2 &&
      !metadata.test(name) &&
      isNaN(Number(name));
  });
} catch (e) {
  return null;
}
''';
SELECT
  client,
  getName(JSON_EXTRACT(payload, '$._font_details')) AS name,
  axisValue,
  axisTag,
  axisSize,
  COUNT(DISTINCT page) AS freq,
  total_page,
  COUNT(DISTINCT page) * 100 / total_page AS pct
FROM
  `httparchive.almanac.requests`,
  UNNEST(REGEXP_EXTRACT_ALL(JSON_EXTRACT(payload,
        '$._font_details.table_sizes'), '(?i)(gvar)')) AS axisValue,
  UNNEST(REGEXP_EXTRACT_ALL(JSON_EXTRACT(payload,
        '$._font_details.table_sizes.fvar'), '(?i)(axisTag)')) AS axisTag,
  UNNEST(REGEXP_EXTRACT_ALL(JSON_EXTRACT(payload,
        '$._font_details.table_sizes.fvar'), '(?i)(axis.size)')) AS axisSize  
JOIN (
  SELECT
    _TABLE_SUFFIX AS client,
    COUNT(0) AS total_page
  FROM
    `httparchive.summary_pages.2020_09_01_*`
  GROUP BY
    _TABLE_SUFFIX)
USING
  (client)      
WHERE
  type = 'font'
  AND date='2020-09-01'
GROUP BY
  client,
  name,
  axisValue,
  axisTag,
  axisSize,
  total_page
ORDER BY
  freq DESC
